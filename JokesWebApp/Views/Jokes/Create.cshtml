@model JokesWebApp.Models.Joke

@{
    ViewData["Title"] = "Create Joke";
}

<div class="row justify-content-center mt-4">
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-header bg-success text-white">
                <h3 class="mb-0"><i class="bi bi-plus-circle"></i> Add a New Joke</h3>
            </div>
            <div class="card-body">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                    <div class="mb-3">
                        <label asp-for="JokeQuestion" class="form-label"></label>
                        <input asp-for="JokeQuestion" class="form-control" placeholder="Enter the joke question..." />
                        <span asp-validation-for="JokeQuestion" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="JokeAnswer" class="form-label"></label>
                        <input asp-for="JokeAnswer" class="form-control" placeholder="Enter the punchline..." />
                        <span asp-validation-for="JokeAnswer" class="text-danger"></span>
                    </div>
                    <div class="d-flex justify-content-between">
                        <a asp-action="Index" class="btn btn-outline-secondary"><i class="bi bi-arrow-left"></i> Back to List</a>
                        <button type="submit" class="btn btn-success"><i class="bi bi-check-circle"></i> Create</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
